{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c958355600e22e200855","webpack:///./src/index.ts","webpack:///./src/Logger.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,uCAA8B;AAE9B,kBAAS,gBAAM,CAAC;;;;;;;;ACFhB,KAAY,SAKX;AALD,YAAY,SAAS;KACjB,2CAAS;KACT,yCAAI;KACJ,yCAAI;KACJ,uCAAG;AACP,EAAC,EALW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAKpB;AAED;KAII,gBAAY,IAAY,EAAE,QAAoB;SAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,SAAS,CAAC,IAAI,CAAC;KAC/C,CAAC;KAED,sBAAI,wBAAI;cAAR,cAAqB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;;QAAA;KAExC,sBAAI,uBAAG;cAAP;aACI,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;iBAClC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;aAC/D,CAAC;aAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;SACrB,CAAC;;;QAAA;KAED,sBAAI,wBAAI;cAAR;aACI,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;iBAClC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;aAChE,CAAC;aAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;SACrB,CAAC;;;QAAA;KAED,sBAAI,wBAAI;cAAR;aACI,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;iBAClC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;aAChE,CAAC;aAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;SACrB,CAAC;;;QAAA;KAED,sBAAI,yBAAK;cAAT;aACI,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;iBACnC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;aACjE,CAAC;aAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;SACrB,CAAC;;;QAAA;KAED;;QAEG;KACH,oCAAoC;KAC5B,qBAAI,GAAZ;SAAa,cAAc;cAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;aAAd,yBAAc;;KAAI,CAAC;KAKhC,sBAAY,uCAAmB;SAH/B;;YAEG;cACH;aACI,IAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;aACxB,MAAM,CAAC,MAAI,IAAI,CAAC,kBAAkB,EAAE,SAAI,IAAI,CAAC,YAAY,EAAE,UAAK,IAAI,CAAC,IAAI,OAAI,CAAC;SAClF,CAAC;;;QAAA;KACL,aAAC;AAAD,EAAC","file":"simple-javascript-logger.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Logger\"] = factory();\n\telse\n\t\troot[\"Logger\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c958355600e22e200855","import Logger from './Logger';\n\nexport = Logger;\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/index.ts","export enum eLogLevel {\n    ERROR = 1,\n    WARN,\n    INFO,\n    LOG\n}\n\nexport default class Logger {\n    private name: string;\n    private logLevel: eLogLevel;\n\n    constructor(name: string, logLevel?: eLogLevel) {\n        this.name = name;\n        this.logLevel = logLevel || eLogLevel.WARN;\n    }\n\n    get Name(): string { return this.name; }\n\n    get Log() {\n        if (this.logLevel === eLogLevel.LOG) {\n            return console.log.bind(console, this.generateCurrentTime);\n        }\n\n        return this.noOp;\n    }\n\n    get Info() {\n        if (this.logLevel >= eLogLevel.INFO) {\n            return console.info.bind(console, this.generateCurrentTime);\n        }\n\n        return this.noOp;\n    }\n\n    get Warn() {\n        if (this.logLevel >= eLogLevel.WARN) {\n            return console.warn.bind(console, this.generateCurrentTime);\n        }\n\n        return this.noOp;\n    }\n\n    get Error() {\n        if (this.logLevel >= eLogLevel.ERROR) {\n            return console.error.bind(console, this.generateCurrentTime);\n        }\n\n        return this.noOp;\n    }\n\n    /**\n     * @ignore\n     */\n    // tslint:disable-next-line:no-empty\n    private noOp(...args: any[]) { }\n\n    /**\n     * @ignore\n     */\n    private get generateCurrentTime(): string {\n        const date = new Date();\n        return `[${date.toLocaleDateString()} ${date.toTimeString()}][${this.name}]:`;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./src/Logger.ts"],"sourceRoot":""}